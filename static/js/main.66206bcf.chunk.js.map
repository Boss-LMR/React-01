{"version":3,"sources":["homework/Input.js","homework/List.js","homework/TodoList.js","index.js"],"names":["Input","handleChang","e","props","addTodo","inpValue","this","id","ref","inputs","input","value","type","onChange","onClick","Component","List","delTodo","index","dele","toggle","renderTodos","done","todos","map","todo","idx","checked","dangerouslySetInnerHTML","__html","title","arr1","filter","item","arr2","length","TodoList","setState","target","state","newTodos","JSON","parse","stringify","localStorage","getItem","console","log","ReactDOM","render","document","getElementById"],"mappings":"6KAEqBA,E,4MACjBC,YAAc,SAACC,GACX,EAAKC,MAAMF,YAAYC,I,EAE3BE,QAAU,WACN,EAAKD,MAAMC,W,uDAEL,IAAD,OAEDC,EAAWC,KAAKH,MAAME,SAE1B,OACI,6BACI,2BAAOE,GAAK,SACZC,IAAK,SAAAC,GAAM,OAAE,EAAKC,MAAQD,GAC1BE,MAAON,EACPO,KAAK,OACLC,SAAYP,KAAKL,cACjB,4BAAQa,QAASR,KAAKF,SAAtB,qB,GAlBmBW,aCAdC,E,4MAEjBC,QAAU,SAACC,GACP,EAAKf,MAAMgB,KAAKD,I,EAEpBE,OAAS,SAACF,GACN,EAAKf,MAAMiB,OAAOF,I,EAEtBG,YAAc,SAACC,GAEX,OADY,EAAKnB,MAAMoB,MACVC,KAAI,SAACC,EAAKC,GACnB,GAAGJ,GAAMG,EAAKH,KACV,OAAM,4BACF,2BAAOR,QAAS,kBAAI,EAAKM,OAAOM,IAChCC,QAASL,EAAMV,KAAK,aACpB,0BAAMgB,wBAAyB,CAACC,OAAOJ,EAAKK,SAC5C,4BACIhB,QAAW,kBAAI,EAAKG,QAAQS,KADhC,qB,uDAcZ,IAAIH,EAAQjB,KAAKH,MAAMoB,MACnBQ,EAAOR,EAAMS,QAAO,SAAAC,GAAI,OACvBA,EAAKX,QAENY,EAAOX,EAAMS,QAAO,SAAAC,GAAI,OACxBA,EAAKX,QAGT,OAEI,6BACI,uDAASS,EAAKI,QACd,4BAEQ7B,KAAKe,aAAY,IAGzB,uDAASa,EAAKC,QACd,4BAEQ7B,KAAKe,aAAY,S,GAlDPN,aCCbqB,E,kDACjB,aAAc,IAAD,8BACT,gBAMJnC,YAAc,SAACC,GACX,EAAKmC,SAAS,CAAChC,SAASH,EAAEoC,OAAO3B,SARxB,EAoBbP,QAAU,WACkB,IAArB,EAAKmC,MAAMlC,UAGd,EAAKgC,SAAS,CACVd,MAAM,CACF,CACIO,MAAO,EAAKS,MAAMlC,SAClBiB,MAAM,IAHT,mBAKE,EAAKiB,MAAMhB,WA9Bb,EAkCbN,QAAU,SAACS,GACP,EAAKW,SAAS,CACVd,MAAM,EAAKgB,MAAMhB,MAAMS,QAAO,SAACC,EAAKf,GAAN,OAAcA,GAASQ,QApChD,EAuCbN,OAAS,SAACF,GACN,IAAIsB,EAAUC,KAAKC,MAAMD,KAAKE,UAAU,EAAKJ,MAAMhB,QACnDiB,EAAStB,GAAOI,MAAOkB,EAAStB,GAAOI,KACvC,EAAKe,SAAS,CACVd,MAAMiB,KAzCV,EAAKD,MAAQ,CACTlC,SAAW,GACXkB,MAAM,IAJD,E,gEAWT,IAAIA,EAAQqB,aAAaC,QAAQ,SAC9BtB,IACCuB,QAAQC,IAAIxB,GACZjB,KAAK+B,SAAS,CACVd,MAAMkB,KAAKC,MAAMnB,Q,+BAgCzB,OACI,6BACI,kBAAC,EAAD,CAAOlB,SAAYC,KAAKiC,MAAMlC,SAC9BkB,MAASjB,KAAKiC,MAAMhB,MACpBnB,QAAWE,KAAKF,QAChBH,YAAeK,KAAKL,cACpB,kBAAC,EAAD,CAAMkB,KAAQb,KAAKW,QACnBG,OAAUd,KAAKc,OACfG,MAASjB,KAAKiC,MAAMhB,a,GAxDER,aCStCiC,IAASC,OACP,6BAAK,kBAAC,EAAD,OAIJC,SAASC,eAAe,U","file":"static/js/main.66206bcf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    handleChang = (e)=>{\r\n        this.props.handleChang(e);\r\n    }\r\n    addTodo = ()=>{\r\n        this.props.addTodo();\r\n    }\r\n    render() {\r\n        \r\n        let inpValue = this.props.inpValue;\r\n        \r\n        return (\r\n            <div>\r\n                <input id = \"inputs\" \r\n                ref={inputs=>this.input = inputs} \r\n                value={inpValue} \r\n                type=\"text\" \r\n                onChange = {this.handleChang} />\r\n                <button onClick={this.addTodo}>添加</button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class List extends Component {\r\n\r\n    delTodo = (index)=>{\r\n        this.props.dele(index)\r\n    }\r\n    toggle = (index)=>{\r\n        this.props.toggle(index);\r\n    }\r\n    renderTodos = (done)=>{\r\n        let todos = this.props.todos;\r\n        return todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return<li>\r\n                    <input onClick={()=>this.toggle(idx)}\r\n                    checked={done} type=\"checkbox\" />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick = {()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n\r\n                </li>\r\n            }\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        let todos = this.props.todos;\r\n        let arr1 = todos.filter(item=>\r\n            !item.done\r\n        );\r\n        let arr2 = todos.filter(item=>\r\n            item.done\r\n        );\r\n        \r\n        return (\r\n            \r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {\r\n                        this.renderTodos(false)\r\n                    }\r\n                </ul>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <ul>\r\n                    {\r\n                        this.renderTodos(true)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue : '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChang = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){   \r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            console.log(todos);\r\n            this.setState({    \r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    \r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index != idx )\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos =JSON.parse(JSON.stringify(this.state.todos)) \r\n        newTodos[index].done =!newTodos[index].done\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    render() {    \r\n        return (\r\n            <div>\r\n                <Input inpValue = {this.state.inpValue}\r\n                todos = {this.state.todos}\r\n                addTodo = {this.addTodo}\r\n                handleChang = {this.handleChang}/>\r\n                <List dele = {this.delTodo}\r\n                toggle = {this.toggle} \r\n                todos = {this.state.todos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import Home from './pages/Home';\r\n// import Control from './components/Control';\r\n// import Demo01 from './pages/Demo01';\r\n// import App from './pages/App';\r\n// import Hoc,{Detail} from './pages/Hoc';\r\n// import Hook from './pages/Hook'\r\n// import Context from './pages/context'\r\nimport TodoList from './homework/TodoList';\r\n// console.log(Context);\r\n\r\nReactDOM.render(\r\n  <div><TodoList/></div>,\r\n//   <Context.Provider value='123'>\r\n//     <Hook/>\r\n//   </Context.Provider>,\r\n   document.getElementById('root')\r\n );\r\n\r\n\r\n// 实现带有本地存储的todolist功能（类组件实现）：\r\n\r\n// 最外层index.js里render(<TodoList/>,xx)\r\n// TodoList组件里包含Input和List两个组件\r\n// 输入框输入时不进行本地存储（使用componentDidUpdate）\r\n\r\n// 写完进行npm run build,将打包完的静态传到github，\r\n// 设置github pages，雪梨提交网页链接和四个文件的代码\r\n\r\n\r\n\r\n\r\n\r\n\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法\r\n\r\n  \r\n\r\n\r\n"],"sourceRoot":""}